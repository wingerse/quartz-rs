use std::io::{self, Read, Write};

use binary;
use proto;
use sound::{self, Sound};

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Facing {
    Down,
    Up,
    North,
    South,
    West,
    East,
}

impl Facing {
    pub fn from_byte(byte: i8) -> Option<Facing> {
        match byte {
            0 => Some(Facing::Down),
            1 => Some(Facing::Up),
            2 => Some(Facing::North),
            3 => Some(Facing::South),
            4 => Some(Facing::West),
            5 => Some(Facing::East),
            _ => None,
        }
    }
}

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub struct BlockPos {
    pub x: i32,
    pub y: u8,
    pub z: i32,
}

impl BlockPos {
    pub const ZERO: BlockPos = BlockPos { x: 0, y: 0, z: 0 };

    pub fn new(x: i32, y: u8, z: i32) -> BlockPos {
        BlockPos { x, y, z }
    }

    pub fn write_proto<W: Write>(&self, w: &mut W) -> io::Result<()> {
        let mut val: u64 = (self.z & 0x3ff_ffff) as u64;
        val |= (self.y as u64 & 0xfff) << 26;
        val |= (self.x as u64 & 0x3ff_ffff) << 38;
        binary::write_long(w, val as i64)
    }

    pub fn read_proto<R: Read>(r: &mut R) -> proto::Result<BlockPos> {
        let val = binary::read_long(r)?;
        let x = (val >> 38) as i32;
        let y = ((val << 26) >> 52) as u8;
        let z = (val as i32) << 6 >> 6;
        Ok(BlockPos { x, y, z })
    }

    pub fn to_relative_chunk_pos(&self) -> (u8, u8, u8) {
        let x = if self.x < 0 { 16 + self.x % 16 } else { self.x % 16 };
        let z = if self.z < 0 { 16 + self.z % 16 } else { self.z % 16 };
        (x as u8, self.y, z as u8)
    }

    pub fn offset(&self, facing: Facing) -> Option<BlockPos> {
        match facing {
            Facing::Down => if self.y == 0 { None } else { Some(BlockPos::new(self.x, self.y - 1, self.z)) },
            Facing::Up => if self.y == 255 { None } else { Some(BlockPos::new(self.x, self.y + 1, self.z)) },
            Facing::North => Some(BlockPos::new(self.x, self.y, self.z - 1)),
            Facing::South => Some(BlockPos::new(self.x, self.y, self.z + 1)),
            Facing::West => Some(BlockPos::new(self.x - 1, self.y, self.z)),
            Facing::East => Some(BlockPos::new(self.x + 1, self.y, self.z)),
        }
    }
}

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub struct BlockID {
    typ: Block,
    meta: u8,
}

impl BlockID {
    pub const AIR: BlockID = BlockID { typ: Block::Air, meta: 0 };

    pub fn new(typ: Block, meta: u8) -> BlockID {
        BlockID {
            typ,
            meta: meta & 0x0f,
        }
    }

    pub fn get_type(&self) -> Block { self.typ }

    pub fn set_type(&mut self, typ: Block) { self.typ = typ; }

    pub fn get_meta(&self) -> u8 { self.meta }

    pub fn set_meta(&mut self, meta: u8) { self.meta = meta & 0x0f; }

    pub fn to_u16(&self) -> u16 { ((self.typ as u16) << 4) | self.meta as u16 }
}

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Block {
    Air,
    Stone,
    Grass,
    Dirt,
    Cobblestone,
    Planks,
    Sapling,
    Bedrock,
    FlowingWater,
    Water,
    FlowingLava,
    Lava,
    Sand,
    Gravel,
    GoldOre,
    IronOre,
    CoalOre,
    Log,
    Leaves,
    Sponge,
    Glass,
    LapisOre,
    LapisBlock,
    Dispenser,
    Sandstone,
    Noteblock,
    Bed,
    GoldenRail,
    DetectorRail,
    StickyPiston,
    Web,
    Tallgrass,
    Deadbush,
    Piston,
    PistonHead,
    Wool,
    PistonExtension,
    YellowFlower,
    RedFlower,
    BrownMushroom,
    RedMushroom,
    GoldBlock,
    IronBlock,
    DoubleStoneSlab,
    StoneSlab,
    BrickBlock,
    Tnt,
    Bookshelf,
    MossyCobblestone,
    Obsidian,
    Torch,
    Fire,
    MobSpawner,
    OakStairs,
    Chest,
    RedstoneWire,
    DiamondOre,
    DiamondBlock,
    CraftingTable,
    Wheat,
    Farmland,
    Furnace,
    LitFurnace,
    StandingSign,
    WoodenDoor,
    Ladder,
    Rail,
    StoneStairs,
    WallSign,
    Lever,
    StonePressurePlate,
    IronDoor,
    WoodenPressurePlate,
    RedstoneOre,
    LitRedstoneOre,
    UnlitRedstoneTorch,
    RedstoneTorch,
    StoneButton,
    SnowLayer,
    Ice,
    Snow,
    Cactus,
    Clay,
    Reeds,
    Jukebox,
    Fence,
    Pumpkin,
    Netherrack,
    SoulSand,
    Glowstone,
    Portal,
    LitPumpkin,
    Cake,
    UnpoweredRepeater,
    PoweredRepeater,
    StainedGlass,
    Trapdoor,
    MonsterEgg,
    Stonebrick,
    BrownMushroomBlock,
    RedMushroomBlock,
    IronBars,
    GlassPane,
    MelonBlock,
    PumpkinStem,
    MelonStem,
    Vine,
    FenceGate,
    BrickStairs,
    StoneBrickStairs,
    Mycelium,
    Waterlily,
    NetherBrick,
    NetherBrickFence,
    NetherBrickStairs,
    NetherWart,
    EnchantingTable,
    BrewingStand,
    Cauldron,
    EndPortal,
    EndPortalFrame,
    EndStone,
    DragonEgg,
    RedstoneLamp,
    LitRedstoneLamp,
    DoubleWoodenSlab,
    WoodenSlab,
    Cocoa,
    SandstoneStairs,
    EmeraldOre,
    EnderChest,
    TripwireHook,
    Tripwire,
    EmeraldBlock,
    SpruceStairs,
    BirchStairs,
    JungleStairs,
    CommandBlock,
    Beacon,
    CobblestoneWall,
    FlowerPot,
    Carrots,
    Potatoes,
    WoodenButton,
    Skull,
    Anvil,
    TrappedChest,
    LightWeightedPressurePlate,
    HeavyWeightedPressurePlate,
    UnpoweredComparator,
    PoweredComparator,
    DaylightDetector,
    RedstoneBlock,
    QuartzOre,
    Hopper,
    QuartzBlock,
    QuartzStairs,
    ActivatorRail,
    Dropper,
    StainedHardenedClay,
    StainedGlassPane,
    Leaves2,
    Log2,
    AcaciaStairs,
    DarkOakStairs,
    Slime,
    Barrier,
    IronTrapdoor,
    Prismarine,
    SeaLantern,
    HayBlock,
    Carpet,
    HardenedClay,
    CoalBlock,
    PackedIce,
    DoublePlant,
    StandingBanner,
    WallBanner,
    DaylightDetectorInverted,
    RedSandstone,
    RedSandstoneStairs,
    DoubleStoneSlab2,
    StoneSlab2,
    SpruceFenceGate,
    BirchFenceGate,
    JungleFenceGate,
    DarkOakFenceGate,
    AcaciaFenceGate,
    SpruceFence,
    BirchFence,
    JungleFence,
    DarkOakFence,
    AcaciaFence,
    SpruceDoor,
    BirchDoor,
    JungleDoor,
    AcaciaDoor,
    DarkOakDoor,
}

impl Block {
    pub fn from_byte(byte: u8) -> Option<Block> {
        use self::Block::*;
        match byte {
            0 => Some(Air),
            1 => Some(Stone),
            2 => Some(Grass),
            3 => Some(Dirt),
            4 => Some(Cobblestone),
            5 => Some(Planks),
            6 => Some(Sapling),
            7 => Some(Bedrock),
            8 => Some(FlowingWater),
            9 => Some(Water),
            10 => Some(FlowingLava),
            11 => Some(Lava),
            12 => Some(Sand),
            13 => Some(Gravel),
            14 => Some(GoldOre),
            15 => Some(IronOre),
            16 => Some(CoalOre),
            17 => Some(Log),
            18 => Some(Leaves),
            19 => Some(Sponge),
            20 => Some(Glass),
            21 => Some(LapisOre),
            22 => Some(LapisBlock),
            23 => Some(Dispenser),
            24 => Some(Sandstone),
            25 => Some(Noteblock),
            26 => Some(Bed),
            27 => Some(GoldenRail),
            28 => Some(DetectorRail),
            29 => Some(StickyPiston),
            30 => Some(Web),
            31 => Some(Tallgrass),
            32 => Some(Deadbush),
            33 => Some(Piston),
            34 => Some(PistonHead),
            35 => Some(Wool),
            36 => Some(PistonExtension),
            37 => Some(YellowFlower),
            38 => Some(RedFlower),
            39 => Some(BrownMushroom),
            40 => Some(RedMushroom),
            41 => Some(GoldBlock),
            42 => Some(IronBlock),
            43 => Some(DoubleStoneSlab),
            44 => Some(StoneSlab),
            45 => Some(BrickBlock),
            46 => Some(Tnt),
            47 => Some(Bookshelf),
            48 => Some(MossyCobblestone),
            49 => Some(Obsidian),
            50 => Some(Torch),
            51 => Some(Fire),
            52 => Some(MobSpawner),
            53 => Some(OakStairs),
            54 => Some(Chest),
            55 => Some(RedstoneWire),
            56 => Some(DiamondOre),
            57 => Some(DiamondBlock),
            58 => Some(CraftingTable),
            59 => Some(Wheat),
            60 => Some(Farmland),
            61 => Some(Furnace),
            62 => Some(LitFurnace),
            63 => Some(StandingSign),
            64 => Some(WoodenDoor),
            65 => Some(Ladder),
            66 => Some(Rail),
            67 => Some(StoneStairs),
            68 => Some(WallSign),
            69 => Some(Lever),
            70 => Some(StonePressurePlate),
            71 => Some(IronDoor),
            72 => Some(WoodenPressurePlate),
            73 => Some(RedstoneOre),
            74 => Some(LitRedstoneOre),
            75 => Some(UnlitRedstoneTorch),
            76 => Some(RedstoneTorch),
            77 => Some(StoneButton),
            78 => Some(SnowLayer),
            79 => Some(Ice),
            80 => Some(Snow),
            81 => Some(Cactus),
            82 => Some(Clay),
            83 => Some(Reeds),
            84 => Some(Jukebox),
            85 => Some(Fence),
            86 => Some(Pumpkin),
            87 => Some(Netherrack),
            88 => Some(SoulSand),
            89 => Some(Glowstone),
            90 => Some(Portal),
            91 => Some(LitPumpkin),
            92 => Some(Cake),
            93 => Some(UnpoweredRepeater),
            94 => Some(PoweredRepeater),
            95 => Some(StainedGlass),
            96 => Some(Trapdoor),
            97 => Some(MonsterEgg),
            98 => Some(Stonebrick),
            99 => Some(BrownMushroomBlock),
            100 => Some(RedMushroomBlock),
            101 => Some(IronBars),
            102 => Some(GlassPane),
            103 => Some(MelonBlock),
            104 => Some(PumpkinStem),
            105 => Some(MelonStem),
            106 => Some(Vine),
            107 => Some(FenceGate),
            108 => Some(BrickStairs),
            109 => Some(StoneBrickStairs),
            110 => Some(Mycelium),
            111 => Some(Waterlily),
            112 => Some(NetherBrick),
            113 => Some(NetherBrickFence),
            114 => Some(NetherBrickStairs),
            115 => Some(NetherWart),
            116 => Some(EnchantingTable),
            117 => Some(BrewingStand),
            118 => Some(Cauldron),
            119 => Some(EndPortal),
            120 => Some(EndPortalFrame),
            121 => Some(EndStone),
            122 => Some(DragonEgg),
            123 => Some(RedstoneLamp),
            124 => Some(LitRedstoneLamp),
            125 => Some(DoubleWoodenSlab),
            126 => Some(WoodenSlab),
            127 => Some(Cocoa),
            128 => Some(SandstoneStairs),
            129 => Some(EmeraldOre),
            130 => Some(EnderChest),
            131 => Some(TripwireHook),
            132 => Some(Tripwire),
            133 => Some(EmeraldBlock),
            134 => Some(SpruceStairs),
            135 => Some(BirchStairs),
            136 => Some(JungleStairs),
            137 => Some(CommandBlock),
            138 => Some(Beacon),
            139 => Some(CobblestoneWall),
            140 => Some(FlowerPot),
            141 => Some(Carrots),
            142 => Some(Potatoes),
            143 => Some(WoodenButton),
            144 => Some(Skull),
            145 => Some(Anvil),
            146 => Some(TrappedChest),
            147 => Some(LightWeightedPressurePlate),
            148 => Some(HeavyWeightedPressurePlate),
            149 => Some(UnpoweredComparator),
            150 => Some(PoweredComparator),
            151 => Some(DaylightDetector),
            152 => Some(RedstoneBlock),
            153 => Some(QuartzOre),
            154 => Some(Hopper),
            155 => Some(QuartzBlock),
            156 => Some(QuartzStairs),
            157 => Some(ActivatorRail),
            158 => Some(Dropper),
            159 => Some(StainedHardenedClay),
            160 => Some(StainedGlassPane),
            161 => Some(Leaves2),
            162 => Some(Log2),
            163 => Some(AcaciaStairs),
            164 => Some(DarkOakStairs),
            165 => Some(Slime),
            166 => Some(Barrier),
            167 => Some(IronTrapdoor),
            168 => Some(Prismarine),
            169 => Some(SeaLantern),
            170 => Some(HayBlock),
            171 => Some(Carpet),
            172 => Some(HardenedClay),
            173 => Some(CoalBlock),
            174 => Some(PackedIce),
            175 => Some(DoublePlant),
            176 => Some(StandingBanner),
            177 => Some(WallBanner),
            178 => Some(DaylightDetectorInverted),
            179 => Some(RedSandstone),
            180 => Some(RedSandstoneStairs),
            181 => Some(DoubleStoneSlab2),
            182 => Some(StoneSlab2),
            183 => Some(SpruceFenceGate),
            184 => Some(BirchFenceGate),
            185 => Some(JungleFenceGate),
            186 => Some(DarkOakFenceGate),
            187 => Some(AcaciaFenceGate),
            188 => Some(SpruceFence),
            189 => Some(BirchFence),
            190 => Some(JungleFence),
            191 => Some(DarkOakFence),
            192 => Some(AcaciaFence),
            193 => Some(SpruceDoor),
            194 => Some(BirchDoor),
            195 => Some(JungleDoor),
            196 => Some(AcaciaDoor),
            197 => Some(DarkOakDoor),
            _ => None,
        }
    }

    pub fn name(&self) -> &'static str {
        use self::Block::*;

        match *self {
            Air => "air",
            Stone => "stone",
            Grass => "grass",
            Dirt => "dirt",
            Cobblestone => "cobblestone",
            Planks => "planks",
            Sapling => "sapling",
            Bedrock => "bedrock",
            FlowingWater => "flowing_water",
            Water => "water",
            FlowingLava => "flowing_lava",
            Lava => "lava",
            Sand => "sand",
            Gravel => "gravel",
            GoldOre => "gold_ore",
            IronOre => "iron_ore",
            CoalOre => "coal_ore",
            Log => "log",
            Leaves => "leaves",
            Sponge => "sponge",
            Glass => "glass",
            LapisOre => "lapis_ore",
            LapisBlock => "lapis_block",
            Dispenser => "dispenser",
            Sandstone => "sandstone",
            Noteblock => "noteblock",
            Bed => "bed",
            GoldenRail => "golden_rail",
            DetectorRail => "detector_rail",
            StickyPiston => "sticky_piston",
            Web => "web",
            Tallgrass => "tallgrass",
            Deadbush => "deadbush",
            Piston => "piston",
            PistonHead => "piston_head",
            Wool => "wool",
            PistonExtension => "piston_extension",
            YellowFlower => "yellow_flower",
            RedFlower => "red_flower",
            BrownMushroom => "brown_mushroom",
            RedMushroom => "red_mushroom",
            GoldBlock => "gold_block",
            IronBlock => "iron_block",
            DoubleStoneSlab => "double_stone_slab",
            StoneSlab => "stone_slab",
            BrickBlock => "brick_block",
            Tnt => "tnt",
            Bookshelf => "bookshelf",
            MossyCobblestone => "mossy_cobblestone",
            Obsidian => "obsidian",
            Torch => "torch",
            Fire => "fire",
            MobSpawner => "mob_spawner",
            OakStairs => "oak_stairs",
            Chest => "chest",
            RedstoneWire => "redstone_wire",
            DiamondOre => "diamond_ore",
            DiamondBlock => "diamond_block",
            CraftingTable => "crafting_table",
            Wheat => "wheat",
            Farmland => "farmland",
            Furnace => "furnace",
            LitFurnace => "lit_furnace",
            StandingSign => "standing_sign",
            WoodenDoor => "wooden_door",
            Ladder => "ladder",
            Rail => "rail",
            StoneStairs => "stone_stairs",
            WallSign => "wall_sign",
            Lever => "lever",
            StonePressurePlate => "stone_pressure_plate",
            IronDoor => "iron_door",
            WoodenPressurePlate => "wooden_pressure_plate",
            RedstoneOre => "redstone_ore",
            LitRedstoneOre => "lit_redstone_ore",
            UnlitRedstoneTorch => "unlit_redstone_torch",
            RedstoneTorch => "redstone_torch",
            StoneButton => "stone_button",
            SnowLayer => "snow_layer",
            Ice => "ice",
            Snow => "snow",
            Cactus => "cactus",
            Clay => "clay",
            Reeds => "reeds",
            Jukebox => "jukebox",
            Fence => "fence",
            Pumpkin => "pumpkin",
            Netherrack => "netherrack",
            SoulSand => "soul_sand",
            Glowstone => "glowstone",
            Portal => "portal",
            LitPumpkin => "lit_pumpkin",
            Cake => "cake",
            UnpoweredRepeater => "unpowered_repeater",
            PoweredRepeater => "powered_repeater",
            StainedGlass => "stained_glass",
            Trapdoor => "trapdoor",
            MonsterEgg => "monster_egg",
            Stonebrick => "stonebrick",
            BrownMushroomBlock => "brown_mushroom_block",
            RedMushroomBlock => "red_mushroom_block",
            IronBars => "iron_bars",
            GlassPane => "glass_pane",
            MelonBlock => "melon_block",
            PumpkinStem => "pumpkin_stem",
            MelonStem => "melon_stem",
            Vine => "vine",
            FenceGate => "fence_gate",
            BrickStairs => "brick_stairs",
            StoneBrickStairs => "stone_brick_stairs",
            Mycelium => "mycelium",
            Waterlily => "waterlily",
            NetherBrick => "nether_brick",
            NetherBrickFence => "nether_brick_fence",
            NetherBrickStairs => "nether_brick_stairs",
            NetherWart => "nether_wart",
            EnchantingTable => "enchanting_table",
            BrewingStand => "brewing_stand",
            Cauldron => "cauldron",
            EndPortal => "end_portal",
            EndPortalFrame => "end_portal_frame",
            EndStone => "end_stone",
            DragonEgg => "dragon_egg",
            RedstoneLamp => "redstone_lamp",
            LitRedstoneLamp => "lit_redstone_lamp",
            DoubleWoodenSlab => "double_wooden_slab",
            WoodenSlab => "wooden_slab",
            Cocoa => "cocoa",
            SandstoneStairs => "sandstone_stairs",
            EmeraldOre => "emerald_ore",
            EnderChest => "ender_chest",
            TripwireHook => "tripwire_hook",
            Tripwire => "tripwire",
            EmeraldBlock => "emerald_block",
            SpruceStairs => "spruce_stairs",
            BirchStairs => "birch_stairs",
            JungleStairs => "jungle_stairs",
            CommandBlock => "command_block",
            Beacon => "beacon",
            CobblestoneWall => "cobblestone_wall",
            FlowerPot => "flower_pot",
            Carrots => "carrots",
            Potatoes => "potatoes",
            WoodenButton => "wooden_button",
            Skull => "skull",
            Anvil => "anvil",
            TrappedChest => "trapped_chest",
            LightWeightedPressurePlate => "light_weighted_pressure_plate",
            HeavyWeightedPressurePlate => "heavy_weighted_pressure_plate",
            UnpoweredComparator => "unpowered_comparator",
            PoweredComparator => "powered_comparator",
            DaylightDetector => "daylight_detector",
            RedstoneBlock => "redstone_block",
            QuartzOre => "quartz_ore",
            Hopper => "hopper",
            QuartzBlock => "quartz_block",
            QuartzStairs => "quartz_stairs",
            ActivatorRail => "activator_rail",
            Dropper => "dropper",
            StainedHardenedClay => "stained_hardened_clay",
            StainedGlassPane => "stained_glass_pane",
            Leaves2 => "leaves2",
            Log2 => "log2",
            AcaciaStairs => "acacia_stairs",
            DarkOakStairs => "dark_oak_stairs",
            Slime => "slime",
            Barrier => "barrier",
            IronTrapdoor => "iron_trapdoor",
            Prismarine => "prismarine",
            SeaLantern => "sea_lantern",
            HayBlock => "hay_block",
            Carpet => "carpet",
            HardenedClay => "hardened_clay",
            CoalBlock => "coal_block",
            PackedIce => "packed_ice",
            DoublePlant => "double_plant",
            StandingBanner => "standing_banner",
            WallBanner => "wall_banner",
            DaylightDetectorInverted => "daylight_detector_inverted",
            RedSandstone => "red_sandstone",
            RedSandstoneStairs => "red_sandstone_stairs",
            DoubleStoneSlab2 => "double_stone_slab2",
            StoneSlab2 => "stone_slab2",
            SpruceFenceGate => "spruce_fence_gate",
            BirchFenceGate => "birch_fence_gate",
            JungleFenceGate => "jungle_fence_gate",
            DarkOakFenceGate => "dark_oak_fence_gate",
            AcaciaFenceGate => "acacia_fence_gate",
            SpruceFence => "spruce_fence",
            BirchFence => "birch_fence",
            JungleFence => "jungle_fence",
            DarkOakFence => "dark_oak_fence",
            AcaciaFence => "acacia_fence",
            SpruceDoor => "spruce_door",
            BirchDoor => "birch_door",
            JungleDoor => "jungle_door",
            AcaciaDoor => "acacia_door",
            DarkOakDoor => "dark_oak_door",
        }
    }

    const STONE_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::DIG_STONE, volume: 1.0, pitch: 1.0 },
        step: Sound { name: sound::STEP_STONE, volume: 1.0, pitch: 1.0 },
        place: Sound { name: sound::DIG_STONE, volume: 1.0, pitch: 1.0 },
    };

    const WOOD_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::DIG_WOOD, volume: 1.0, pitch: 1.0 },
        step: Sound { name: sound::STEP_WOOD, volume: 1.0, pitch: 1.0 },
        place: Sound { name: sound::DIG_WOOD, volume: 1.0, pitch: 1.0 },
    };

    const GRAVEL_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::DIG_GRAVEL, volume: 1.0, pitch: 1.0 },
        step: Sound { name: sound::STEP_GRAVEL, volume: 1.0, pitch: 1.0 },
        place: Sound { name: sound::DIG_GRAVEL, volume: 1.0, pitch: 1.0 },
    };

    const GRASS_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::DIG_GRASS, volume: 1.0, pitch: 1.0 },
        step: Sound { name: sound::STEP_GRASS, volume: 1.0, pitch: 1.0 },
        place: Sound { name: sound::DIG_GRASS, volume: 1.0, pitch: 1.0 },
    };

    const METAL_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::DIG_STONE, volume: 1.0, pitch: 1.5 },
        step: Sound { name: sound::STEP_STONE, volume: 1.0, pitch: 1.5 },
        place: Sound { name: sound::DIG_STONE, volume: 1.0, pitch: 1.5 },
    };

    const GLASS_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::DIG_GLASS, volume: 1.0, pitch: 1.0 },
        step: Sound { name: sound::STEP_STONE, volume: 1.0, pitch: 1.0 },
        place: Sound { name: sound::DIG_STONE, volume: 1.0, pitch: 1.0 },
    };

    const CLOTH_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::DIG_CLOTH, volume: 1.0, pitch: 1.0 },
        step: Sound { name: sound::STEP_CLOTH, volume: 1.0, pitch: 1.0 },
        place: Sound { name: sound::DIG_CLOTH, volume: 1.0, pitch: 1.0 },
    };

    const SAND_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::DIG_SAND, volume: 1.0, pitch: 1.0 },
        step: Sound { name: sound::STEP_SAND, volume: 1.0, pitch: 1.0 },
        place: Sound { name: sound::DIG_SAND, volume: 1.0, pitch: 1.0 },
    };

    const SNOW_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::DIG_SNOW, volume: 1.0, pitch: 1.0 },
        step: Sound { name: sound::STEP_SNOW, volume: 1.0, pitch: 1.0 },
        place: Sound { name: sound::DIG_SNOW, volume: 1.0, pitch: 1.0 },
    };

    const LADDER_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::DIG_WOOD, volume: 1.0, pitch: 1.0 },
        step: Sound { name: sound::STEP_LADDER, volume: 1.0, pitch: 1.0 },
        place: Sound { name: sound::DIG_WOOD, volume: 1.0, pitch: 1.0 },
    };

    const ANVIL_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::DIG_STONE, volume: 1.0, pitch: 1.0 },
        step: Sound { name: sound::STEP_ANVIL, volume: 1.0, pitch: 1.0 },
        place: Sound { name: sound::RANDOM_ANVIL_LAND, volume: 1.0, pitch: 1.0 },
    };

    const SLIME_SOUNDS: BlockSounds = BlockSounds {
        breaks: Sound { name: sound::MOB_SLIME_BIG, volume: 1.0, pitch: 1.0 },
        step: Sound { name: sound::MOB_SLIME_SMALL, volume: 1.0, pitch: 1.0 },
        place: Sound { name: sound::MOB_SLIME_BIG, volume: 1.0, pitch: 1.0 },
    };

    pub fn get_sounds(&self) -> Option<BlockSounds> {
        use self::Block::*;

        match *self {
            Air => None,
            Stone => Some(Self::STONE_SOUNDS),
            Grass => Some(Self::GRASS_SOUNDS),
            Dirt => Some(Self::GRAVEL_SOUNDS),
            Cobblestone => Some(Self::STONE_SOUNDS),
            Planks => Some(Self::WOOD_SOUNDS),
            Sapling => Some(Self::GRAVEL_SOUNDS),
            Bedrock => Some(Self::STONE_SOUNDS),
            FlowingWater => None,
            Water => None,
            FlowingLava => None,
            Lava => None,
            Sand => Some(Self::SAND_SOUNDS),
            Gravel => Some(Self::GRAVEL_SOUNDS),
            GoldOre => Some(Self::STONE_SOUNDS),
            IronOre => Some(Self::STONE_SOUNDS),
            CoalOre => Some(Self::STONE_SOUNDS),
            Log => Some(Self::WOOD_SOUNDS),
            Leaves => Some(Self::GRASS_SOUNDS),
            Sponge => Some(Self::GRASS_SOUNDS),
            Glass => Some(Self::GLASS_SOUNDS),
            LapisOre => Some(Self::STONE_SOUNDS),
            LapisBlock => Some(Self::STONE_SOUNDS),
            Dispenser => Some(Self::STONE_SOUNDS),
            Sandstone => Some(Self::STONE_SOUNDS),
            Noteblock => Some(Self::STONE_SOUNDS),
            Bed => Some(Self::WOOD_SOUNDS),
            GoldenRail => Some(Self::METAL_SOUNDS),
            DetectorRail => Some(Self::METAL_SOUNDS),
            StickyPiston => Some(Self::STONE_SOUNDS),
            Web => Some(Self::STONE_SOUNDS),
            Tallgrass => Some(Self::GRASS_SOUNDS),
            Deadbush => Some(Self::GRASS_SOUNDS),
            Piston => Some(Self::STONE_SOUNDS),
            PistonHead => Some(Self::STONE_SOUNDS),
            Wool => Some(Self::CLOTH_SOUNDS),
            PistonExtension => Some(Self::STONE_SOUNDS),
            YellowFlower => Some(Self::GRASS_SOUNDS),
            RedFlower => Some(Self::GRASS_SOUNDS),
            BrownMushroom => Some(Self::GRASS_SOUNDS),
            RedMushroom => Some(Self::GRASS_SOUNDS),
            GoldBlock => Some(Self::STONE_SOUNDS),
            IronBlock => Some(Self::STONE_SOUNDS),
            DoubleStoneSlab => Some(Self::STONE_SOUNDS),
            StoneSlab => Some(Self::STONE_SOUNDS),
            BrickBlock => Some(Self::STONE_SOUNDS),
            Tnt => Some(Self::GRASS_SOUNDS),
            Bookshelf => Some(Self::WOOD_SOUNDS),
            MossyCobblestone => Some(Self::STONE_SOUNDS),
            Obsidian => Some(Self::STONE_SOUNDS),
            Torch => Some(Self::WOOD_SOUNDS),
            Fire => Some(Self::CLOTH_SOUNDS),
            MobSpawner => Some(Self::METAL_SOUNDS),
            OakStairs => Some(Self::WOOD_SOUNDS),
            Chest => Some(Self::WOOD_SOUNDS),
            RedstoneWire => Some(Self::STONE_SOUNDS),
            DiamondOre => Some(Self::STONE_SOUNDS),
            DiamondBlock => Some(Self::STONE_SOUNDS),
            CraftingTable => Some(Self::WOOD_SOUNDS),
            Wheat => Some(Self::GRASS_SOUNDS),
            Farmland => Some(Self::GRAVEL_SOUNDS),
            Furnace => Some(Self::STONE_SOUNDS),
            LitFurnace => Some(Self::STONE_SOUNDS),
            StandingSign => Some(Self::WOOD_SOUNDS),
            WoodenDoor => Some(Self::WOOD_SOUNDS),
            Ladder => Some(Self::LADDER_SOUNDS),
            Rail => Some(Self::METAL_SOUNDS),
            StoneStairs => Some(Self::STONE_SOUNDS),
            WallSign => Some(Self::WOOD_SOUNDS),
            Lever => Some(Self::WOOD_SOUNDS),
            StonePressurePlate => Some(Self::STONE_SOUNDS),
            IronDoor => Some(Self::METAL_SOUNDS),
            WoodenPressurePlate => Some(Self::WOOD_SOUNDS),
            RedstoneOre => Some(Self::STONE_SOUNDS),
            LitRedstoneOre => Some(Self::STONE_SOUNDS),
            UnlitRedstoneTorch => Some(Self::WOOD_SOUNDS),
            RedstoneTorch => Some(Self::WOOD_SOUNDS),
            StoneButton => Some(Self::STONE_SOUNDS),
            SnowLayer => Some(Self::SNOW_SOUNDS),
            Ice => Some(Self::GLASS_SOUNDS),
            Snow => Some(Self::SNOW_SOUNDS),
            Cactus => Some(Self::CLOTH_SOUNDS),
            Clay => Some(Self::GRAVEL_SOUNDS),
            Reeds => Some(Self::GRASS_SOUNDS),
            Jukebox => Some(Self::STONE_SOUNDS),
            Fence => Some(Self::WOOD_SOUNDS),
            Pumpkin => Some(Self::WOOD_SOUNDS),
            Netherrack => Some(Self::STONE_SOUNDS),
            SoulSand => Some(Self::SAND_SOUNDS),
            Glowstone => Some(Self::GLASS_SOUNDS),
            Portal => Some(Self::GLASS_SOUNDS),
            LitPumpkin => Some(Self::WOOD_SOUNDS),
            Cake => Some(Self::CLOTH_SOUNDS),
            UnpoweredRepeater => Some(Self::WOOD_SOUNDS),
            PoweredRepeater => Some(Self::WOOD_SOUNDS),
            StainedGlass => Some(Self::GLASS_SOUNDS),
            Trapdoor => Some(Self::WOOD_SOUNDS),
            MonsterEgg => Some(Self::STONE_SOUNDS),
            Stonebrick => Some(Self::STONE_SOUNDS),
            BrownMushroomBlock => Some(Self::WOOD_SOUNDS),
            RedMushroomBlock => Some(Self::WOOD_SOUNDS),
            IronBars => Some(Self::METAL_SOUNDS),
            GlassPane => Some(Self::GLASS_SOUNDS),
            MelonBlock => Some(Self::WOOD_SOUNDS),
            PumpkinStem => Some(Self::WOOD_SOUNDS),
            MelonStem => Some(Self::WOOD_SOUNDS),
            Vine => Some(Self::GRASS_SOUNDS),
            FenceGate => Some(Self::WOOD_SOUNDS),
            BrickStairs => Some(Self::STONE_SOUNDS),
            StoneBrickStairs => Some(Self::STONE_SOUNDS),
            Mycelium => Some(Self::GRASS_SOUNDS),
            Waterlily => Some(Self::GRASS_SOUNDS),
            NetherBrick => Some(Self::STONE_SOUNDS),
            NetherBrickFence => Some(Self::STONE_SOUNDS),
            NetherBrickStairs => Some(Self::STONE_SOUNDS),
            NetherWart => None,
            EnchantingTable => Some(Self::STONE_SOUNDS),
            BrewingStand => Some(Self::STONE_SOUNDS),
            Cauldron => Some(Self::STONE_SOUNDS),
            EndPortal => Some(Self::GLASS_SOUNDS),
            EndPortalFrame => Some(Self::GLASS_SOUNDS),
            EndStone => Some(Self::STONE_SOUNDS),
            DragonEgg => Some(Self::STONE_SOUNDS),
            RedstoneLamp => Some(Self::GLASS_SOUNDS),
            LitRedstoneLamp => Some(Self::GLASS_SOUNDS),
            DoubleWoodenSlab => Some(Self::WOOD_SOUNDS),
            WoodenSlab => Some(Self::WOOD_SOUNDS),
            Cocoa => Some(Self::WOOD_SOUNDS),
            SandstoneStairs => Some(Self::STONE_SOUNDS),
            EmeraldOre => Some(Self::STONE_SOUNDS),
            EnderChest => Some(Self::STONE_SOUNDS),
            TripwireHook => Some(Self::STONE_SOUNDS),
            Tripwire => None,
            EmeraldBlock => Some(Self::STONE_SOUNDS),
            SpruceStairs => Some(Self::WOOD_SOUNDS),
            BirchStairs => Some(Self::WOOD_SOUNDS),
            JungleStairs => Some(Self::WOOD_SOUNDS),
            CommandBlock => Some(Self::WOOD_SOUNDS),
            Beacon => Some(Self::STONE_SOUNDS),
            CobblestoneWall => Some(Self::STONE_SOUNDS),
            FlowerPot => Some(Self::STONE_SOUNDS),
            Carrots => Some(Self::GRASS_SOUNDS),
            Potatoes => Some(Self::GRASS_SOUNDS),
            WoodenButton => Some(Self::WOOD_SOUNDS),
            Skull => Some(Self::STONE_SOUNDS),
            Anvil => Some(Self::ANVIL_SOUNDS),
            TrappedChest => Some(Self::WOOD_SOUNDS),
            LightWeightedPressurePlate => Some(Self::WOOD_SOUNDS),
            HeavyWeightedPressurePlate => Some(Self::WOOD_SOUNDS),
            UnpoweredComparator => Some(Self::WOOD_SOUNDS),
            PoweredComparator => Some(Self::WOOD_SOUNDS),
            DaylightDetector => Some(Self::WOOD_SOUNDS),
            RedstoneBlock => Some(Self::STONE_SOUNDS),
            QuartzOre => Some(Self::STONE_SOUNDS),
            Hopper => Some(Self::STONE_SOUNDS),
            QuartzBlock => Some(Self::STONE_SOUNDS),
            QuartzStairs => Some(Self::STONE_SOUNDS),
            ActivatorRail => Some(Self::METAL_SOUNDS),
            Dropper => Some(Self::STONE_SOUNDS),
            StainedHardenedClay => Some(Self::STONE_SOUNDS),
            StainedGlassPane => Some(Self::GLASS_SOUNDS),
            Leaves2 => Some(Self::GRASS_SOUNDS),
            Log2 => Some(Self::WOOD_SOUNDS),
            AcaciaStairs => Some(Self::WOOD_SOUNDS),
            DarkOakStairs => Some(Self::WOOD_SOUNDS),
            Slime => Some(Self::SLIME_SOUNDS),
            Barrier => Some(Self::STONE_SOUNDS),
            IronTrapdoor => Some(Self::METAL_SOUNDS),
            Prismarine => Some(Self::STONE_SOUNDS),
            SeaLantern => Some(Self::GLASS_SOUNDS),
            HayBlock => Some(Self::GRASS_SOUNDS),
            Carpet => Some(Self::CLOTH_SOUNDS),
            HardenedClay => Some(Self::STONE_SOUNDS),
            CoalBlock => Some(Self::STONE_SOUNDS),
            PackedIce => Some(Self::GLASS_SOUNDS),
            DoublePlant => Some(Self::GRASS_SOUNDS),
            StandingBanner => Some(Self::WOOD_SOUNDS),
            WallBanner => Some(Self::WOOD_SOUNDS),
            DaylightDetectorInverted => Some(Self::WOOD_SOUNDS),
            RedSandstone => Some(Self::STONE_SOUNDS),
            RedSandstoneStairs => Some(Self::STONE_SOUNDS),
            DoubleStoneSlab2 => Some(Self::STONE_SOUNDS),
            StoneSlab2 => Some(Self::STONE_SOUNDS),
            SpruceFenceGate => Some(Self::WOOD_SOUNDS),
            BirchFenceGate => Some(Self::WOOD_SOUNDS),
            JungleFenceGate => Some(Self::WOOD_SOUNDS),
            DarkOakFenceGate => Some(Self::WOOD_SOUNDS),
            AcaciaFenceGate => Some(Self::WOOD_SOUNDS),
            SpruceFence => Some(Self::WOOD_SOUNDS),
            BirchFence => Some(Self::WOOD_SOUNDS),
            JungleFence => Some(Self::WOOD_SOUNDS),
            DarkOakFence => Some(Self::WOOD_SOUNDS),
            AcaciaFence => Some(Self::WOOD_SOUNDS),
            SpruceDoor => Some(Self::WOOD_SOUNDS),
            BirchDoor => Some(Self::WOOD_SOUNDS),
            JungleDoor => Some(Self::WOOD_SOUNDS),
            AcaciaDoor => Some(Self::WOOD_SOUNDS),
            DarkOakDoor => Some(Self::WOOD_SOUNDS),
        }
    }
}

#[derive(Debug, Clone, Copy)]
pub struct BlockSounds {
    pub breaks: Sound,
    pub step: Sound,
    pub place: Sound,
}